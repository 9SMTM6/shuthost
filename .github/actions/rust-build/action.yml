name: 'Rust Build'
description: 'Builds a Rust binary for a specific target'
inputs:
  target:
    description: 'The Rust target to build for (optional). If omitted, the host target will be used.'
    required: false
    default: ''
  bin-name:
    description: 'The name of the binary to build'
    required: true
  additional-flags:
    description: 'Optional additional flags to pass to cargo build (e.g. --features "foo")'
    required: false
    default: ''
runs:
  using: 'composite'
  steps:
    - name: Setup Node.js
      if: ${{ runner.os == 'Windows' }}
      uses: actions/setup-node@v6
      with:
        node-version: 'latest'

    - name: Ensure latest stable rustc
      shell: ${{ runner.os == 'Windows' && 'pwsh' || 'bash' }}
      run: rustup update stable

    - name: Install Rust target
      if: ${{ inputs.target != '' }}
      shell: ${{ runner.os == 'Windows' && 'pwsh' || 'bash' }}
      run: rustup target add ${{ inputs.target }}

    - name: Install dependencies for MUSL targets
      if: ${{ inputs.target != '' && contains(inputs.target, 'musl') }}
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install -y musl-tools

    - name: Debug npm
      if: ${{ runner.os == 'Windows' }}
      shell: pwsh
      run: |
        echo "PATH: $env:PATH"
        npm --version

    - name: Build binary with target
      if: ${{ inputs.target != '' }}
      shell: ${{ runner.os == 'Windows' && 'pwsh' || 'bash' }}
      run: cargo build --release --bin "${{ inputs.bin-name }}" --target "${{ inputs.target }}" ${{ inputs.additional-flags }}

    - name: Build binary without target
      if: ${{ inputs.target == '' }}
      shell: ${{ runner.os == 'Windows' && 'pwsh' || 'bash' }}
      run: cargo build --release --bin "${{ inputs.bin-name }}" ${{ inputs.additional-flags }}
