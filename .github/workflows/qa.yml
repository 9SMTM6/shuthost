on: [push, pull_request]

# These tests are considered irrelevant for a proper deployment, but sure are nice to have correct most of the time.
name: QualityAssurance

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: rustfmt
      - uses: Swatinem/rust-cache@v2
      - run: cargo +stable --locked fmt --all -- --check
  cargo-deny:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: EmbarkStudios/cargo-deny-action@v2
      with:
        rust-version: stable
  spell-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Check spelling of entire workspace
        uses: crate-ci/typos@master
  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - run: cargo +stable clippy --workspace -- -D warnings

  coverage:
    name: Coverage report (llvm-cov)
    runs-on: ubuntu-latest

    env:
      COVERAGE: 1
      SKIP_BUILD: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: llvm-tools-preview

      - uses: Swatinem/rust-cache@v2

      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Install npm
        run: |
          sudo apt-get update
          sudo apt-get install -y npm

      - name: Install node deps, Playwright Chromium and system deps
        run: |
          cd frontend
          npm ci
          npm run install-chromium
          # install system dependencies for Playwright
          npx playwright install-deps || true

      - name: Install test fonts (Inter & Cascadia Code)
        run: |
          set -eux
          case "${{ runner.os }}" in
            Linux)
              # Install via apt; fail if unavailable.
              sudo apt-get update
              sudo apt-get install -y fonts-inter fonts-cascadia-code
              ;;
            macOS)
              # Homebrew cask fonts; fail if they can't be installed.
              brew install --cask font-inter font-cascadia-code
              ;;
            *)
              echo "Unsupported runner OS: ${{ runner.os }} â€” aborting" >&2; exit 1;
              ;;
          esac
          # Verify via fc-list; if fc-list isn't present this will fail which
          # is desired so the CI run fails when fonts are not available.
          fc-list | grep -i inter >/dev/null 2>&1 || { echo "Inter font not found on macOS after install" >&2; exit 1; }
          fc-list | grep -i cascadia >/dev/null 2>&1 || { echo "Cascadia Code not found on macOS after install" >&2; exit 1; }
          sudo fc-cache -f -v

      - name: Set coverage environment
        run: cargo llvm-cov show-env --export-prefix >> $GITHUB_ENV

      - name: Clean coverage artifacts
        run: cargo llvm-cov clean --workspace

      - name: Build with instrumentation
        run: cargo build --workspace

      - name: Run Playwright tests
        run: cd frontend && npx playwright test

      - name: Run Rust tests
        run: cargo test --workspace

      - name: Generate coverage reports
        run: |
          cargo llvm-cov report --lcov --output-path lcov.info
          cargo llvm-cov report --html --output-dir coverage

      - name: Upload coverage artifacts (HTML + LCOV)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            ./coverage/
            ./lcov.info

      - name: Check if lcov.info is up to date
        run: |
          if ! git diff --quiet lcov.info; then
            echo "lcov.info has changed. Please commit the updated coverage."
            exit 1
          fi